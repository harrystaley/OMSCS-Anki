{
    "__type__": "Deck",
    "children": [
        {
            "__type__": "Deck",
            "children": [],
            "crowdanki_uuid": "11ad75fc-a760-11ed-8af1-a14d95925fac",
            "deck_config_uuid": "11ae97d4-a760-11ed-8af1-a14d95925fac",
            "desc": "",
            "dyn": 0,
            "extendNew": 0,
            "extendRev": 0,
            "media_files": [
                "6zSCXW2xImcevCSfSy7zUn3XbGhuKHl2fnTJ6j4SmnSVrs24nVseWlHSaGedNRJ6rGJtovtDMdRdnpsG2AT6d5tAjJRZOHr-IFv_C8SuAE3Vcdt0L3j.png",
                "OXJU_PiXQ8ud3MCCBpmsr8o2bPCaNqEjIowfGsz7MzguZEOLG2eAtXLXGpECgLNtO5c22WXvxxjXZJUkEzLnAaoIpq9Rg97e8swPuZ4XaYWNhrr2wCY.png",
                "paste-27e5ad70d0ee87058c016c89bdc9fb8be0ace77e.jpg",
                "paste-4cd125ed2523225424e18edda8e616ca2b3ef878.jpg",
                "paste-888e8fccd34d585b3b577c80afd3e8ce70d00bc5.jpg",
                "paste-aea946f1b8898c759f980cd94d31249b4af29d32.jpg",
                "paste-eff2f16e5153efef548d03e4bcc00afb99c40406.jpg"
            ],
            "name": "Lesson 1: Intro, History, and Internet Arch.",
            "notes": [
                {
                    "__type__": "Note",
                    "fields": [
                        "What are advantages of a network layered architecture?",
                        "<b><ul><li><div><span style=\"font-weight: 400;\">Scalability</span></div></li><li><div><span style=\"font-weight: 400;\">Modularity</span></div></li><li><div><span style=\"font-weight: 400;\">Flexibility (add or delete components)</span></div></li></ul></b>",
                        ""
                    ],
                    "guid": "nl&NMtEV8(",
                    "note_model_uuid": "11adacca-a760-11ed-8af1-a14d95925fac",
                    "tags": [
                        "cn",
                        "cn::exam1",
                        "cn::lesson1"
                    ]
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "What are <b>disadvantages</b> of a network <b>layered architecture</b>?",
                        "<b><ul><li><div><span style=\"font-weight: 400;\"><i>Cross-layer dependencies</i> that violate the goal of layer separation</span></div></li><li><div><span style=\"font-weight: 400;\"><i>Duplicate functionality,</i> i.e. error correction/recovery&nbsp;</span></div></li><li><div><span style=\"font-weight: 400;\"><i>Increased overhead in computation and in message headers </i>caused by the abstraction barriers between layers</span></div></li></ul></b>",
                        ""
                    ],
                    "guid": "wL=kNhu8P|",
                    "note_model_uuid": "11adacca-a760-11ed-8af1-a14d95925fac",
                    "tags": [
                        "cn",
                        "cn::exam1",
                        "cn::lesson1"
                    ]
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "What are the <b>differences</b> between the OSI model and the five-layered Internet model?",
                        "OSI model has 7 layers and five-layered is five layers where the session and presentation layers are combined into the application layer",
                        ""
                    ],
                    "guid": "EpBw.ED:}K",
                    "note_model_uuid": "11adacca-a760-11ed-8af1-a14d95925fac",
                    "tags": [
                        "cn",
                        "cn::exam1",
                        "cn::lesson1"
                    ]
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "What are the <b>similarities</b> between the OSI model and the five-layered Internet model?",
                        "They both represent layered network architecture with a physical, data link, network, transport, and application layer. and have the same advantages and disadvantages when it comes to utilize a layered architecture.<br><ul style=\"\"><li style=\"font-weight: bold;\"><div>Advantages</div></li><ul style=\"font-weight: bold;\"><li><div><span style=\"font-weight: 400;\">Scalability</span></div></li><li><div><span style=\"font-weight: 400;\">Modularity</span></div></li><li><div><span style=\"font-weight: 400;\">Flexibility (add or delete components)</span></div></li></ul><li style=\"font-weight: bold;\"><div>Disadvantages</div></li><ul style=\"font-weight: bold;\"><li><div><span style=\"font-weight: 400;\">Cross-layer dependencies that violate the goal of layer separation</span></div></li><li><div><span style=\"font-weight: 400;\">Duplicate functionality, i.e. error recovery&nbsp;</span></div></li><li><div><span style=\"font-weight: 400;\">Increased overhead in computation and in message headers caused by the abstraction barriers between layers</span></div></li></ul><li style=\"\"><b><span style=\"font-weight: 400;\"><img src=\"OXJU_PiXQ8ud3MCCBpmsr8o2bPCaNqEjIowfGsz7MzguZEOLG2eAtXLXGpECgLNtO5c22WXvxxjXZJUkEzLnAaoIpq9Rg97e8swPuZ4XaYWNhrr2wCY.png\"></span></b><br></li><li style=\"\"><b><span style=\"font-weight: 400;\"><b><span style=\"font-weight: 400;\"><img src=\"6zSCXW2xImcevCSfSy7zUn3XbGhuKHl2fnTJ6j4SmnSVrs24nVseWlHSaGedNRJ6rGJtovtDMdRdnpsG2AT6d5tAjJRZOHr-IFv_C8SuAE3Vcdt0L3j.png\"></span></b><br></span></b></li></ul>",
                        ""
                    ],
                    "guid": "o.5G.X])fv",
                    "note_model_uuid": "11adacca-a760-11ed-8af1-a14d95925fac",
                    "tags": [
                        "cn",
                        "cn::exam1",
                        "cn::lesson1"
                    ]
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "{{c1::Sockets}}<b><span style=\"font-weight: 400;\">&nbsp;are the interface between the application and transport layers</span></b>",
                        ""
                    ],
                    "guid": "z+ti}K~=L@",
                    "note_model_uuid": "11adbb66-a760-11ed-8af1-a14d95925fac",
                    "tags": [
                        "cn",
                        "cn::exam1",
                        "cn::lesson1"
                    ]
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "What are the 7 layers in the OSI Model?",
                        "<ol><li>Physical</li><li>DataLink</li><li>Network</li><li>Transport</li><li>Session</li><li>Presentation</li><li>Application</li></ol>",
                        ""
                    ],
                    "guid": "Rc3)&:(Mpm",
                    "note_model_uuid": "11adacca-a760-11ed-8af1-a14d95925fac",
                    "tags": [
                        "cn",
                        "cn::exam1",
                        "cn::lesson1"
                    ]
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "How many layers are in the OSI Model",
                        "7",
                        ""
                    ],
                    "guid": "N$A%18OXmx",
                    "note_model_uuid": "11adacca-a760-11ed-8af1-a14d95925fac",
                    "tags": [
                        "cn",
                        "cn::exam1",
                        "cn::lesson1"
                    ]
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "OSI Model<br><br>Human computer interaction layer, where applications can access the network services.",
                        "Application Layer",
                        "y"
                    ],
                    "guid": "D@c@?bv!I{",
                    "note_model_uuid": "11adacca-a760-11ed-8af1-a14d95925fac",
                    "tags": [
                        "cn",
                        "cn::exam1",
                        "cn::lesson1"
                    ]
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "OSI Model<br><br>Ensures the data is in a usable format and is where data encryption occurs.",
                        "Presentation Layer",
                        "y"
                    ],
                    "guid": "NF,5o`ZkwN",
                    "note_model_uuid": "11adacca-a760-11ed-8af1-a14d95925fac",
                    "tags": [
                        "cn",
                        "cn::exam1",
                        "cn::lesson1"
                    ]
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "OSI Model<br><br>Maintains connections and is responsible for controlling ports and sessions",
                        "Session Layer",
                        "y"
                    ],
                    "guid": "DWlJM7lO/k",
                    "note_model_uuid": "11adacca-a760-11ed-8af1-a14d95925fac",
                    "tags": [
                        "cn",
                        "cn::exam1",
                        "cn::lesson1"
                    ]
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "OSI Model<br><br>Transmits data using transmission protocols including TCP and UDP",
                        "Transport Layer",
                        "y"
                    ],
                    "guid": "wOk+r{RV;C",
                    "note_model_uuid": "11adacca-a760-11ed-8af1-a14d95925fac",
                    "tags": [
                        "cn",
                        "cn::exam1",
                        "cn::lesson1"
                    ]
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "OSI Model<br><br>Decides which physical path the data will take.",
                        "Network Layer",
                        "y"
                    ],
                    "guid": "H8fH3],41>",
                    "note_model_uuid": "11adacca-a760-11ed-8af1-a14d95925fac",
                    "tags": [
                        "cn",
                        "cn::exam1",
                        "cn::lesson1"
                    ]
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "OSI Model<br><br>Defines the format of data on the network",
                        "Data Link Layer",
                        "y"
                    ],
                    "guid": "z@LYO)u^ZG",
                    "note_model_uuid": "11adacca-a760-11ed-8af1-a14d95925fac",
                    "tags": [
                        "cn",
                        "cn::exam1",
                        "cn::lesson1"
                    ]
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "OSI Model<br><br>Transmits raw bit stream over the physical medium",
                        "Physical Layer",
                        "y"
                    ],
                    "guid": "u<iKC<Typm",
                    "note_model_uuid": "11adacca-a760-11ed-8af1-a14d95925fac",
                    "tags": [
                        "cn",
                        "cn::exam1",
                        "cn::lesson1"
                    ]
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "OSI Model<br><br>Which layer is responsible for moving datagrams from on internet host to another?",
                        "Network Layer",
                        ""
                    ],
                    "guid": "e@Ptr%7=~P",
                    "note_model_uuid": "11adacca-a760-11ed-8af1-a14d95925fac",
                    "tags": [
                        "cn",
                        "cn::exam1",
                        "cn::lesson1"
                    ]
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "OSI Model<br><br>Which layer is responsible for end to end communication between hosts?",
                        "Transport Layer",
                        ""
                    ],
                    "guid": "oD6+^{l*SK",
                    "note_model_uuid": "11adacca-a760-11ed-8af1-a14d95925fac",
                    "tags": [
                        "cn",
                        "cn::exam1",
                        "cn::lesson1"
                    ]
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "OSI Model<br><br>Which layer is responsible for moving frames from one node (host or router) to the next node.&nbsp;",
                        "Data Link Layer",
                        ""
                    ],
                    "guid": "FR`[}8.zV*",
                    "note_model_uuid": "11adacca-a760-11ed-8af1-a14d95925fac",
                    "tags": [
                        "cn",
                        "cn::exam1",
                        "cn::lesson1"
                    ]
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "OSI Model<br><br><b><span style=\"font-weight: 400;\">We refer to packets of information as frames in which layer?&nbsp;</span></b>",
                        "Data Link Layer",
                        ""
                    ],
                    "guid": "otYHU@X@U|",
                    "note_model_uuid": "11adacca-a760-11ed-8af1-a14d95925fac",
                    "tags": [
                        "cn",
                        "cn::exam1",
                        "cn::lesson1"
                    ]
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "OSI Model<br><br><b><span style=\"font-weight: 400;\">which layer</span></b><b><span style=\"font-weight: 400;\">&nbsp;facilitates the interaction with actual hardware.</span></b>",
                        "<b><span style=\"font-weight: 400;\">Physical layer</span></b>",
                        ""
                    ],
                    "guid": "jn@}@;)X(#",
                    "note_model_uuid": "11adacca-a760-11ed-8af1-a14d95925fac",
                    "tags": [
                        "cn",
                        "cn::exam1",
                        "cn::lesson1"
                    ]
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "What are the information packets (PDUs) called at the Application layer?",
                        "Messages",
                        ""
                    ],
                    "guid": "re0_&mBt;!",
                    "note_model_uuid": "11adacca-a760-11ed-8af1-a14d95925fac",
                    "tags": [
                        "cn",
                        "cn::exam1",
                        "cn::lesson1"
                    ]
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "What are information packets (PDUs) called at the Transport layer?",
                        "Segments",
                        ""
                    ],
                    "guid": "Hh1=*hYgkb",
                    "note_model_uuid": "11adacca-a760-11ed-8af1-a14d95925fac",
                    "tags": [
                        "cn",
                        "cn::exam1",
                        "cn::lesson1"
                    ]
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "<b><span style=\"font-weight: 400;\">In Networking,&nbsp;</span></b>{{c1::encapsulation}}<b><span style=\"font-weight: 400;\">&nbsp;is the process of taking data from one protocol and translating it into data that is used by another protocol as the data continues across a network.</span></b>",
                        "<img src=\"paste-aea946f1b8898c759f980cd94d31249b4af29d32.jpg\">"
                    ],
                    "guid": "qB72khcM0C",
                    "note_model_uuid": "11adbb66-a760-11ed-8af1-a14d95925fac",
                    "tags": [
                        "cn",
                        "cn::exam1",
                        "cn::lesson1"
                    ]
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "End-hosts implement all five layers, intermediate devices {{c1::don’t::do/dont}}.",
                        ""
                    ],
                    "guid": "oy7M(>iPxr",
                    "note_model_uuid": "11adbb66-a760-11ed-8af1-a14d95925fac",
                    "tags": [
                        "cn",
                        "cn::exam1",
                        "cn::lesson1"
                    ]
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "End to end principle<br><br>The network core should be {{c1::simple}} and {{c1::minimal}}, while the end systems should carry the {{c1::intelligence}}.",
                        "Moving functions and services closer to the applications that use them, increases the flexibility and the autonomy of the application designer to offer these services to the needs of the specific application. Thus, the higher-level protocol layers, are more specific to an application. Whereas the lower-level protocol layers are free to organize the lower-level network resources to achieve application design goals more efficiently and independently of the specific application.<br><br><img src=\"paste-888e8fccd34d585b3b577c80afd3e8ce70d00bc5.jpg\">"
                    ],
                    "guid": "OJU%:)|j*)",
                    "note_model_uuid": "11adbb66-a760-11ed-8af1-a14d95925fac",
                    "tags": [
                        "cn",
                        "cn::exam1",
                        "cn::lesson1"
                    ]
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "<b><span style=\"font-weight: 400;\">What are two examples of things that violation of e2e principle?</span></b>",
                        "1. Firewalls<br>2. NATs",
                        ""
                    ],
                    "guid": "GqhuCD+q~i",
                    "note_model_uuid": "11adacca-a760-11ed-8af1-a14d95925fac",
                    "tags": [
                        "cn",
                        "cn::exam1",
                        "cn::lesson1"
                    ]
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "<b><span style=\"font-weight: 400;\">T/F<br></span></b><br>Firewalls violate the e2e principle since they are intermediate devices operated between two end hosts and can drop the end hosts' communication.&nbsp;",
                        "True",
                        ""
                    ],
                    "guid": "MC!%Rw01e8",
                    "note_model_uuid": "11adacca-a760-11ed-8af1-a14d95925fac",
                    "tags": [
                        "cn",
                        "cn::exam1",
                        "cn::lesson1"
                    ]
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "<strong>Why do NAT boxes violate the e2e principle?</strong>",
                        "<b>The hosts behind NAT boxes are not globally addressable or routable.</b> <br><br>As a result, it is not possible for other hosts on the public Internet to initiate connections to these devices. So, if we have a host behind a NAT and a host on the public Internet, they cannot communicate by default without the intervention of a NAT box.<br><br><img src=\"paste-27e5ad70d0ee87058c016c89bdc9fb8be0ace77e.jpg\">",
                        ""
                    ],
                    "guid": "qhdLa}!5<d",
                    "note_model_uuid": "11adacca-a760-11ed-8af1-a14d95925fac",
                    "tags": [
                        "cn",
                        "cn::exam1",
                        "cn::lesson1"
                    ]
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "{{c1::EvoArch}}<b><span style=\"font-weight: 400;\">&nbsp;is a discrete-time model that is executed over rounds which can help illustrate layered&nbsp;</span></b>{{c2::architectures}}<b><span style=\"font-weight: 400;\">&nbsp;and their evolution in a&nbsp;</span></b>{{c2::quantitative}}<b><span style=\"font-weight: 400;\">&nbsp;manner.</span></b>",
                        ""
                    ],
                    "guid": "qG3^%m;2!p",
                    "note_model_uuid": "11adbb66-a760-11ed-8af1-a14d95925fac",
                    "tags": [
                        "cn",
                        "cn::exam1",
                        "cn::lesson1"
                    ]
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "Repeaters and hubs operate on what layer of the OSI Model?",
                        "Physical Layer (L1)",
                        ""
                    ],
                    "guid": "JGNK9,?or",
                    "note_model_uuid": "11adacca-a760-11ed-8af1-a14d95925fac",
                    "tags": [
                        "cn",
                        "cn::exam1",
                        "cn::lesson1"
                    ]
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "Bridges operate on what layer of the OSI Model?",
                        "Data Link Layer (L2) along with Layer2-Switches",
                        ""
                    ],
                    "guid": "NHFd7u02Cj",
                    "note_model_uuid": "11adacca-a760-11ed-8af1-a14d95925fac",
                    "tags": [
                        "cn",
                        "cn::exam1",
                        "cn::lesson1"
                    ]
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "[Routers operate on what layer of the OSI Model?",
                        "Network Layer (L3) along with Layer3-Switches",
                        ""
                    ],
                    "guid": "JIPlrI#iLu",
                    "note_model_uuid": "11adacca-a760-11ed-8af1-a14d95925fac",
                    "tags": [
                        "cn",
                        "cn::exam1",
                        "cn::lesson1"
                    ]
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "What is a bridge?",
                        "A bridge is a device with multiple inputs/outputs. <br><br>A bridge transfers frames from an input to one or more outputs.",
                        ""
                    ],
                    "guid": "Iij=O9C#NR",
                    "note_model_uuid": "11adacca-a760-11ed-8af1-a14d95925fac",
                    "tags": [
                        "cn",
                        "cn::exam1",
                        "cn::lesson1"
                    ]
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "How does a bridge 'learn'?",
                        "It learns by populating/maintaing a forwarding table.&nbsp;<br><br>When the bridge receives any frame this is a “learning opportunity” to know which hosts are reachable through which ports. This is because the bridge can view the port over which a frame arrives and the source host. Going back to our example topology, eventually the bridge builds the following forwarding table.<br><br><img src=\"paste-eff2f16e5153efef548d03e4bcc00afb99c40406.jpg\"><img src=\"paste-4cd125ed2523225424e18edda8e616ca2b3ef878.jpg\"><br>",
                        ""
                    ],
                    "guid": "xk/^wkl:J/",
                    "note_model_uuid": "11adacca-a760-11ed-8af1-a14d95925fac",
                    "tags": [
                        "cn",
                        "cn::exam1",
                        "cn::lesson1"
                    ]
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "<div><b><span style=\"font-weight: 400;\">What is the</span><span style=\"font-weight: 400;\">&nbsp;combination of the segment and the network header called?</span></b></div>",
                        "<span style=\"font-weight: 700;\">Datagram</span>",
                        ""
                    ],
                    "guid": "K:f~5&pSO?",
                    "note_model_uuid": "11adacca-a760-11ed-8af1-a14d95925fac",
                    "tags": [
                        "cn",
                        "cn::exam1",
                        "cn::lesson1",
                        "cn::studyquiz"
                    ]
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "T/F<div><br></div><div>The e2e principle suggests that specific application-level functions usually can, and preferably should be built into the lower levels of the system at the core of the network.&nbsp;<b><br></b></div>",
                        "FALSE<br><br><b><div><span style=\"font-weight: 400;\">The e2e principle suggests that specific application-level functions usually </span>cannot<span style=\"font-weight: 400;\">, and preferably </span>should not<span style=\"font-weight: 400;\"> be built into the lower levels of the system at the core of the network. The e2e principle is summarized as: the network core should be simple and minimal, while the end systems should carry the intelligence.</span></div></b><br>",
                        ""
                    ],
                    "guid": "P8`LpMC~.d",
                    "note_model_uuid": "11adacca-a760-11ed-8af1-a14d95925fac",
                    "tags": [
                        "cn",
                        "cn::exam1",
                        "cn::lesson1",
                        "cn::studyquiz"
                    ]
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "<div><b><span style=\"font-weight: 400;\">The Internet protocol stack has a layered architecture that resembles what kind of shape?</span></b><br></div>",
                        "Hourglass",
                        ""
                    ],
                    "guid": "vVAlsDO=E}",
                    "note_model_uuid": "11adacca-a760-11ed-8af1-a14d95925fac",
                    "tags": [
                        "cn",
                        "cn::exam1",
                        "cn::lesson1",
                        "cn::studyquiz"
                    ]
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "<div>The EvoArch model considers an abstract model of the Internet’s protocol stack, selecting components that are applied.<b><br><ol><ol><li><div>Layers</div></li><li><div>Node incoming edges</div></li><li><div>Edges</div></li><li><div>Nodes</div></li><li><div><span style=\"font-weight: 400;\">Node survival rate</span></div></li><li><div><span style=\"font-weight: 400;\">Layer probability</span></div></li></ol></ol></b></div>",
                        "<ol style=\"\"><li style=\"font-weight: 700;\"><div>Layers</div></li><li style=\"font-weight: 700;\"><div>Node incoming edges</div></li><li style=\"font-weight: 700;\"><div>Edges</div></li><li style=\"font-weight: 700;\"><div>Nodes</div></li></ol>",
                        ""
                    ],
                    "guid": "mNA=iEh^V,",
                    "note_model_uuid": "11adacca-a760-11ed-8af1-a14d95925fac",
                    "tags": [
                        "cn",
                        "cn::exam1",
                        "cn::lesson1",
                        "cn::studyquiz"
                    ]
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "What is the first computer network concept that was invented in 1969 called?",
                        "<b>ARPANET</b>",
                        ""
                    ],
                    "guid": "MB1M7dwmsX",
                    "note_model_uuid": "11adacca-a760-11ed-8af1-a14d95925fac",
                    "tags": [
                        "cn",
                        "cn::exam1",
                        "cn::lesson1",
                        "cn::studyquiz"
                    ]
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "<div><b>What is the initial ARPANET Host-to-Host protocol called?</b><br><ol><ol><li><div>TCP</div></li><li><div>UDP</div></li><li><div>NCP</div></li><li><div>IP</div></li></ol></ol></div>",
                        "NCP",
                        ""
                    ],
                    "guid": "n;7]Aqdupr",
                    "note_model_uuid": "11adacca-a760-11ed-8af1-a14d95925fac",
                    "tags": [
                        "cn",
                        "cn::exam1",
                        "cn::lesson1",
                        "cn::studyquiz"
                    ]
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "What is the first application that used the initial ARPANET protocol?",
                        "<b>Email</b>",
                        ""
                    ],
                    "guid": "tOrA%$qyBt",
                    "note_model_uuid": "11adacca-a760-11ed-8af1-a14d95925fac",
                    "tags": [
                        "cn",
                        "cn::exam1",
                        "cn::lesson1",
                        "cn::studyquiz"
                    ]
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "What is one of the first and most popular applications that sprung up after DNS (Domain Name System)?",
                        "<b>WWW (World WIde Web)</b>",
                        ""
                    ],
                    "guid": "q#kgZO{UEm",
                    "note_model_uuid": "11adacca-a760-11ed-8af1-a14d95925fac",
                    "tags": [
                        "cn",
                        "cn::exam1",
                        "cn::lesson1",
                        "cn::studyquiz"
                    ]
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "What is the interface between the Application layer and Transport layer called?",
                        "<b>Sockets</b>",
                        ""
                    ],
                    "guid": "Mu6s}1l$?X",
                    "note_model_uuid": "11adacca-a760-11ed-8af1-a14d95925fac",
                    "tags": [
                        "cn",
                        "cn::exam1",
                        "cn::lesson1",
                        "cn::studyquiz"
                    ]
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "OSI Model<br><br>List some protocols that operate at the Application Layer",
                        "HTTP, HTTPS, SMTP, FTP, SSH, DNS"
                    ],
                    "guid": "c/kwVC`zYI",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "OSI Model<br><br>What protocols operate at the <b>Transport Layer</b>",
                        "TCP, UDP"
                    ],
                    "guid": "rUG|xy0ff0",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "OSI Model<br><br>List some protocols that operate on the <b>Network Layer</b>.",
                        "IP, ARP, ICMP"
                    ],
                    "guid": "qywK_zxp|)",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "OSI Model<br><br>List some protocols that operate at the <b>Datalink Layer.</b>",
                        "PPP, IEEE 802.2, Ethernet, WiFi, DOCSIS"
                    ],
                    "guid": "o?U$w{gB,r",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "What does Encapsulation do?",
                        "The data is sent down each layer of the OSI Model building a Protocol Data Unit&nbsp;(PDU) or Package by wrapping the data with header&nbsp;and optionally trailer information, both of which contain control information to the PDU from the layer above."
                    ],
                    "guid": "H%2OikFpoI",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "What does De-encapsulation do?",
                        "A recieving node or itermidary read/strip layers of the Package to get to address information so that it can be redirected or assembled with other packages at the destination."
                    ],
                    "guid": "P4visX#KAR",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "How did Licklider and his team in the early 1960s experiment with a precursor to the Internet? <br><br><ol><li>Building the HTTP protocol</li><li>Creating the first web browser</li><li>Prototyping Network Control Protocol (NCP)</li><li>Connecting two computers over a dial-up telephone line</li></ol>",
                        "4. Connecting two computers over a dial-up telephone line"
                    ],
                    "guid": "yl?/ndCnR;",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": [
                        "Weekly_Quiz"
                    ]
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "What is the Domain Name System (DNS) designed to do primarily? <br>Group of answer choices<br><br><ol><li>Create simple web pages</li><li>Route traffic through a network</li><li>Create more IP addresses</li><li>Translate domain names into IP addresses</li></ol>",
                        "4. Translate domain names into IP addresses"
                    ],
                    "guid": "MI?:8+BR,y",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": [
                        "Weekly_Quiz"
                    ]
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "What is the architectural design of the Internet protocol stack based on? <br><ol><li>Applications</li><li>Layers</li><li>Signals</li></ol>",
                        "2. Layers"
                    ],
                    "guid": "OZlXkaW+({",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": [
                        "Weekly_Quiz"
                    ]
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "Both the data link and transports layer protocols may provide error correction. <br><ol><li>True</li><li>False</li></ol>",
                        "1. True"
                    ],
                    "guid": "c%xdO{nH}x",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": [
                        "Weekly_Quiz"
                    ]
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "What allows for communication between the application layer and transport layer? <br><ol><li>Hosts</li><li>Routers</li><li>Sockets</li><li>Bridges</li></ol>",
                        "3. Sockets"
                    ],
                    "guid": "pDpS5Dd%NJ",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": [
                        "Weekly_Quiz"
                    ]
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "Which of the following protocols belong to the application layer? <br><ol><li>DNS (Domain Name Service)</li><li>IP (Internet Protocol)</li><li>UDP (User Datagram Protocol)</li><li>Ethernet</li></ol>",
                        "1. DNS (Domain Name Service)"
                    ],
                    "guid": "L0.-aWmxj~",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": [
                        "Weekly_Quiz"
                    ]
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "Which two protocols belong to the transport layer? Select all that apply. <br><ol><li>HTTP</li><li>IP</li><li>TCP</li><li>UDP</li></ol>",
                        "3. TCP<br>4. UDP"
                    ],
                    "guid": "bP.V5AR8|/",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": [
                        "Weekly_Quiz"
                    ]
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "When an application sends a packet of information across the network, this packet travels down the IP stack and undergoes what process? <br><ol><li>Augmentation</li><li>Encapsulation</li><li>De-encapsulation</li><li>Transportation</li></ol>",
                        "2. Encapsulation"
                    ],
                    "guid": "ibKeGGrV*N",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": [
                        "Weekly_Quiz"
                    ]
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "According to the end-to-end principle, where should most of the Internet’s functionality/intelligence be implemented? <br><ol><li>At the edges of a network</li><li>At the core of a network</li><li>Wherever convenient for the designer</li><li>At middle boxes in a network</li></ol>",
                        "1. At the edges of a network"
                    ],
                    "guid": "D(P}eoc/w]",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": [
                        "Weekly_Quiz"
                    ]
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "What is the difference between hubs, bridges, and routers? <br><ol><li>They remove malicious traffic at different tiers</li><li>They operate on different layers of the IP stack</li><li>Firewalls are built into all routers, but not the other devices.</li><li>Some provide additional caching services</li></ol>",
                        "2. They operate on different layers of the IP stack"
                    ],
                    "guid": "w$g[O[?`Bv",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": [
                        "Weekly_Quiz"
                    ]
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "What is used for addressing at the Transport layer?",
                        "Port #"
                    ],
                    "guid": "CQ$eTh##;!",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "What is used for addressing at the Network layer?",
                        "IP Address"
                    ],
                    "guid": "b3s%v:v5[y",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "What is used for addressing at the Datalink layer?",
                        "Mac Address"
                    ],
                    "guid": "lYGKcRX{bo",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "What are information packets (PDUs) called at the Network layer?",
                        "Datagrams"
                    ],
                    "guid": "zN;r!6b:{]",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "What are information packets (PDUs) called at the Datalink layer?",
                        "Frames"
                    ],
                    "guid": "h..HQE~#+_",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "What are information packets (PDUs) called at the Physical layer?",
                        "Bits"
                    ],
                    "guid": "C>6%Yr*/R%",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "What are PDUs called at each layer of the OSI model beginning at the Physical layer?",
                        "1. Bit<br>2. Frame<br>3.Packet<br>4. Segment on TCP and&nbsp;<strong>datagram on UDP</strong><br>5-7. Messages or Data"
                    ],
                    "guid": "bft7?Ko@d>",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                }
            ]
        },
        {
            "__type__": "Deck",
            "children": [],
            "crowdanki_uuid": "11ae9540-a760-11ed-8af1-a14d95925fac",
            "deck_config_uuid": "11ae97d4-a760-11ed-8af1-a14d95925fac",
            "desc": "",
            "dyn": 0,
            "extendNew": 0,
            "extendRev": 0,
            "media_files": [],
            "name": "Lesson 3: Intradomain Routing",
            "newLimit": null,
            "newLimitToday": null,
            "notes": [
                {
                    "__type__": "Note",
                    "fields": [
                        "When talking about how a packet is transferred from its sending host to its destination host, \"forwarding\" refers to",
                        "transferring a packet from an incoming link to an outgoing link within a single router"
                    ],
                    "guid": "j&GO{4$j6A",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "When talking about how a packet is transferred from its sending host to its destination host, \"intradomain routing\" refers to",
                        "how routers work together using routing protocols to determine good paths within the same administrative domain"
                    ],
                    "guid": "g@<F.tK#.c",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "When talking about how a packet is transferred from its sending host to its destination host, <b>interdomain routing</b> refers to",
                        "how routers work together using routing protocols to determine good paths across <b>different</b> administrative domains"
                    ],
                    "guid": "K9mBj?QEkr",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "Which action is network-wide (i.e. involves multiple routers) routing or switching?",
                        "routing"
                    ],
                    "guid": "As__/1h;V6",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "What happens when a packet is moved from a router’s input link to the appropriate link",
                        "The packet is <b>forwarded</b>"
                    ],
                    "guid": "z_-,x3Xozt",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "In intradomain routing what could the weights of each edge in the graph represent?",
                        "<ul><li>Lenghth of the cable</li><li>Time delay to traverse the link</li><li>Monetary Cost</li><li>Link Capacity</li><li>Current Load on the Link</li></ul>"
                    ],
                    "guid": "cqSyPbsqEV",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "T/F<br><br>Intradomain routing involves multiple administrative domains.",
                        "<div>False</div>"
                    ],
                    "guid": "L(*ozW{Dvt",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "What is the problem with using current load as a weight with link-state algorithms?",
                        "The weighs are&nbsp;<i>not</i>&nbsp;static and change dramatically as traffic moves over the network. This is a non-trivial problem which can cause pathological behavior."
                    ],
                    "guid": "AbG@IAqlm)",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "T/F<br><br>Upon termination of Dijkstra’s algorithm, all nodes in a network&nbsp;are aware of the entire network topology.&nbsp;",
                        "True"
                    ],
                    "guid": "PXro1cq0vz",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "<div>What three words can be used to describe the distance vector algorithm?</div>",
                        "<ul><li>Distributed</li><li>Iterative</li><li>Asynchronous</li></ul>"
                    ],
                    "guid": "j9PadkE-A[",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "What is the computational complexity of the Linkstate Routing Algorithm where n represents the nodes in the topology?",
                        "\\(O(n^{2})\\)"
                    ],
                    "guid": "P&o>*qe7Ua",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "What is one possible cause for the count to infinity problem?",
                        "Routing Loops"
                    ],
                    "guid": "g#a~W6L/[y",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "Dijkstra’s algorithm is a _______<i> </i>routing algorithm, which is also referred to as a&nbsp;_______ algorithm.",
                        "<ul><li>global</li><li>link-state</li></ul>"
                    ],
                    "guid": "n^>-EVo6G%",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "The Bellman Ford equation is used by what routing algorithm?",
                        "<div>distance vector routing</div>"
                    ],
                    "guid": "G{O,eO`7#o",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "Routing Information Protocol (RIP) is an example of what two kinds of algorithms?",
                        "<div><ol><li>distance vector</li><li>intradomain</li></ol></div>"
                    ],
                    "guid": "z%>P}nolDy",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "T/F<br><br>There may be multiple egress points from an administrative domain to an external destination.",
                        "<div>True</div>"
                    ],
                    "guid": "C:CS_&zo{~",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "T/F<br><br>Hot potato routing always selects the egress point that is geographically closest to the ingress point.",
                        "<div>False</div>"
                    ],
                    "guid": "mitT_sdVk;",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "How does Hot potato routing choose its' egress point?",
                        "choosing the closest egress point based on intradomain path cost (Interior Gateway Protocol/IGP cost)."
                    ],
                    "guid": "jrYi4_5$n0",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "Link state algorithms use what underlying algorithm?",
                        "Djykstras' algorithm"
                    ],
                    "guid": "ekaZW*Sm&Y",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "The Routing Information Protocol (RIP) is based on the what routing algorithm?",
                        "Distance Vector routing algorithm"
                    ],
                    "guid": "xk)HKGbeN2",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "Open Shortest Path First (OSPF) is based on what routing algorithm?",
                        "Linkstate routing algorithm"
                    ],
                    "guid": "oo;[?duo|7",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "What causes the Count-to-Infinity Problem in the Distance Vector Routing Algorithm?",
                        "<ul><li>Updates resulting from an <b>increase</b> in link cost <b>travel slowly</b></li><li>Updates resulting from an <b>decrease</b> in link cost <b>travel quickly</b></li></ul>"
                    ],
                    "guid": "Jwce4%}hqC",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "What are the key characteristics of the Distance Vector Routing Algorithm?",
                        "<ul><li>Based on the Bellman Ford Algorithm</li><li>The stopping condition is when all nodes stop sending updates to their neighbors</li><li>t's an iterative, asynchronous and distributed algorithm</li></ul>"
                    ],
                    "guid": "o3i/D`a/QV",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "What happens during the iterative part of the Linkstate Routing Algorithm?&nbsp;",
                        "<ol><li>look at the set of nodes that are NOT included in N’, and we identify the node ex.&nbsp;\\(w\\)&nbsp;with the least cost path from the previous iteration</li><li>We add the node&nbsp;&nbsp;\\(w\\)&nbsp;&nbsp;(that has the least cost path from the previous iteration) into N’</li><li>For every neighbor v of w, we update&nbsp;\\(D(v) \\)&nbsp;which is the cost of the current least cost path from&nbsp;&nbsp;\\(w\\)&nbsp;&nbsp;to&nbsp;&nbsp;\\(v\\)&nbsp;</li></ol>"
                    ],
                    "guid": "m1fk3*hRrV",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "In what cases does Poison Reverse solve the Count to Infinity Problem?",
                        "<div>When the problem occurs with 2 nodes<br></div>"
                    ],
                    "guid": "q;%n?K{.p{",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "Interdomain routing must involves how many administrative domains?",
                        "<div>multiple administrative domains<br></div>"
                    ],
                    "guid": "rRbKx3_?=p",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "Intradomain routing must involves how many administrative domains?",
                        "<div>one administrative domain<br></div>"
                    ],
                    "guid": "ejhza=rsCI",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "What are the main characteristics of Hot Potato routing?",
                        "<ul><li>it effectively reduces the network’s resource consumption by getting the traffic out as soon as possible</li><li>it chooses the closest egress point based on intradomain path cost (Interior Gateway Protocol/IGP cost)</li><li>it's an intradomain routing technique</li></ul>"
                    ],
                    "guid": "hQYu$VQX?v",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "T/F<br><br>Hot Potato routing is an intradomain routing technique.",
                        "<div>True</div>"
                    ],
                    "guid": "zORrcmakAO",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "T/F<br><br>How does Hot Potato routing choose its egress point?",
                        "based on intradomain path cost (Interior Gateway Protocol/IGP cost)"
                    ],
                    "guid": "gW5ep~L*?=",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "T/F<br><br>How does Hot Potato routing reduce the network’s resource consumption?",
                        "getting the traffic out as soon as possible"
                    ],
                    "guid": "D;`x}i<PYI",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "What chracteristics do nodes have in the Distance Vector Routing Algorithm?",
                        "<ul><li>A node's distance vector is the vector of cost estimates from itself to all other nodes</li><li>Each node maintains its view of the network in a table</li><li>Nodes only update its direct neighbors when its least-cost path changes</li></ul>"
                    ],
                    "guid": "jB[pFfS0i&",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "In what algorithms does a node maintain its view of the network in a table?",
                        "<ul><li>Distance Vector Routing</li><li>Link State Routing</li><li>Djykstras Algorithm</li></ul>"
                    ],
                    "guid": "o.e^}0%M5W",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "What happens during the Initialization stage of the Linkstate Routing Algorithm?",
                        "We initialize all the currently known least-cost paths from a source node&nbsp;\\(u\\)&nbsp;&nbsp;to its directly attached neighbors&nbsp;\\(v\\)&nbsp;<br>For nodes that are not directly attached to the source node&nbsp;\\(u\\)&nbsp;, initialize the cost to&nbsp;∞<br>initialize the set&nbsp;\\(N'\\)&nbsp;to include only the source node&nbsp;\\(u\\)&nbsp;"
                    ],
                    "guid": "f_b&ooB}6v",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "What are some characteristics about the Linkstate Routing Algorithm?",
                        "<ul><li>Uses Dijkstra’s algorithm</li><li>The link costs and the network topology are known to ALL nodes</li><li>The goal of the algorithm is to compute the least cost paths from a source node to all other nodes</li></ul>"
                    ],
                    "guid": "q<];fBGWeD",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "In RIP (Routing Information Protocol) how are routing updates exchanged between neighbors?",
                        "By using RIP advertisements with messages"
                    ],
                    "guid": "K{41*P3|[1",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "What are some characteristics of a <b>centralized routing algorithm</b>?",
                        "<ul><li>The algorithm computes the least-cost path between a source and destination using <b>complete, global knowledge</b> about the network.</li><li>That is, the algorithm takes the connectivity between all nodes and all link costs as inputs.</li></ul>"
                    ],
                    "guid": "f^mO[%y$6g",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "What are some characteristics of a <b>decentralized routing algorithm?</b>&nbsp;",
                        "<div><ul><li>The calculation of the least-cost path is</li><li>carried out in an iterative, distributed manner by the routers.</li><li>No node has com-plete information about the costs of all network links.</li><li>Each node begins with only the knowledge of the costs of its own directly attached links.</li></ul></div>"
                    ],
                    "guid": "MiYtw%v<7y",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "In what situation does the poison reverse not work?",
                        "If the count to infinity problem affects three or more nodes."
                    ],
                    "guid": "EbQ^cn5Ph4",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                }
            ],
            "reviewLimit": null,
            "reviewLimitToday": null
        },
        {
            "__type__": "Deck",
            "children": [],
            "crowdanki_uuid": "6b6b8c8e-b000-11ed-958b-77f34c5f6f8a",
            "deck_config_uuid": "11ae97d4-a760-11ed-8af1-a14d95925fac",
            "desc": "",
            "dyn": 0,
            "extendNew": 0,
            "extendRev": 0,
            "media_files": [],
            "name": "Lesson 4: AS Relationships and Interdomain Routing",
            "notes": [
                {
                    "__type__": "Note",
                    "fields": [
                        "Route Servers&nbsp;keep track of the BGP sessions they maintain with each participant AS through a?",
                        "peer specific RIB"
                    ],
                    "guid": "sNY8U,&[D?",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "What type of filters are applied to ensure that each member AS only advertises routes that it should advertise?",
                        "Import filters"
                    ],
                    "guid": "C|&DHfT?&P",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "What types of attacks are IXPs specifically adept at protecting against?",
                        "DDoS (Distributed Denail of Service)"
                    ],
                    "guid": "rt22D}I,c^",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "T/F<br><br>Participating in an IXP is free.",
                        "False"
                    ],
                    "guid": "L?Qi1.FZ[}",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "T/F<br><br>Critical players in todays' internet ecosystem \"incentivise\" IXPs.",
                        "True"
                    ],
                    "guid": "Jz]-84dW5o",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "T/F<br><br>Route Servers are a available through membership with an IXP at an additional cost.",
                        "False"
                    ],
                    "guid": "H5G&+wT}Hu",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "T/F<br><br>Private peering PIs DO NOT use IXPs public peering infrastructure.",
                        "False"
                    ],
                    "guid": "jY;8>(Nw7x",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "In the BGP protocol, destinations are represented by?",
                        "IP Prefixes (CIDR notation)"
                    ],
                    "guid": "P]>j+}t0sc",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "Flap Damping",
                        "When an AS limits the number of routing changes, thus explicitly limiting the propagation of unstable routes."
                    ],
                    "guid": "p7qt;hmK~2",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "The four reasons why networks choose to peer at IXPs?",
                        "<div><ol><li>They keep <b>local traffic local</b></li><li>They operate at a <b>lower cost</b></li><li><b>Critical players</b> in today’s Internet ecosystem often “<b>incentivize</b>” other networks to connect at IXPs</li><li>Network performance is improved due to <b>reduced delay</b></li></ol></div>"
                    ],
                    "guid": "eJF5IkqHfD",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "What are four services offered by IXPs?",
                        "<div><ol><li><b>Public</b> Peering</li><li><b>Private</b> Peering</li><li><b>Remote</b> peering through resellers</li><li><b>DDoS Blackholing</b></li></ol></div>"
                    ],
                    "guid": "heL{j1Kful",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "Route Filters",
                        "Rules that determine which routes an AS's router should advertise to the routers of neighboring ASes."
                    ],
                    "guid": "zorn~[{Kbz",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "4 examples of Interior Gateway Protocols (IGPs):",
                        "<div><ul><li>Open Shortest Paths First (OSPF)</li><li>Intermediate System - Intermediate System (IS-IS)</li><li>Routing Information Protocol (RIP)</li><li>Enhanced Interior Gateway Routing Protocol (E-IGRP)</li></ul></div>"
                    ],
                    "guid": "J=)2byX$DF",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "KEEPALIVE",
                        "<div><div>BGP ​messages are exchanged between peers to keep a current session going.</div></div><br>"
                    ],
                    "guid": "K(>@F,!;Qe",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "T/F<br><br>An AS can use the <b>LocalPref</b> attribute to control which routers are used as exit points (for outgoing traffic).",
                        "<div><div>True</div></div>"
                    ],
                    "guid": "qG!DZdTw@;",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "T/F<br><br>An AS can use the <b>MED</b> attribute to control which routers are used as entry points (for the incoming traffic).",
                        "<div><div>True</div></div>"
                    ],
                    "guid": "B_A@FQ#9P}",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "T/F<br><br>Autonomous Systems implement their own set of policies, make their own traffic engineering decisions and interconnection strategies, and determine how traffic leaves and enters the network.",
                        "<div><div>True</div></div>"
                    ],
                    "guid": "F8QlAN6m~u",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "What are the two types of BGP messages?",
                        "<ul><li>UPDATE</li><li>KEEPALIVE</li></ul>"
                    ],
                    "guid": "CTt.SX);66",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "<div><div>T/F</div><div><br></div><div>The BGP protocol is used within an AS and focuses on optimizing a path metric within the network. Examples of BGP protocols are Open Shortest Paths First (OSPF) and Routing Information Protocol.</div></div>",
                        "False"
                    ],
                    "guid": "udHyV3E~=6",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "<div><div>What are the three main things that are true about Provider-Customer relationships.</div></div>",
                        "<div><ul><li>Provider-Customer relationship (or transit) is based on a financial settlement that determines how much the customer will pay the provider</li><li>Provider ASes have a financial incentive to forward as much of their customers’ traffic as possible.</li><li>In a Provider-Customer relationship (or transit), the provider forwards the customer's traffic to destinations found in the provider's routing table (including the opposite direction of the traffic).</li></ul></div>"
                    ],
                    "guid": "NMG=$o~nwP",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "How is a multi-lateral BGP peering session maintained by an IXP route server?",
                        "<div><ol><li>Runs BGP independently with every participant AS and maintains a <b>participant Routing Information Base (RIB)</b></li><li>Uses <b>Import filters</b> to ensure that each member AS only advertises routes that it should advertise</li><li>Uses <b>Export filters</b> that are triggered by IXP members to restrict the set of other IXP member ASes that receive their routes</li></ol></div>"
                    ],
                    "guid": "NDrnnTG&hg",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "What are three chief characteristics of IXPs?",
                        "<div><ol><li>They help mitigate DDoS attacks and stop the DDoS traffic before it hits a participant AS</li><li>They are active marketplaces and technology innovation hubs that go beyond interconnection</li><li>They are interconnection hubs that handle large traffic volumes -- some comparable to that of global Tier 1 ISPs</li></ol></div>"
                    ],
                    "guid": "t~(q~F<W(/",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "Two chief characteristics of Peering relationships.",
                        "<div><ol><li>In a peering relationship, the traffic exchanged between the two peers <b>MUST be highly symetric</b> so that there is enough incentive for both parties to peer with each other.</li><li>Peering allows networks to have their traffic <b>forwarded without cost</b></li></ol></div>"
                    ],
                    "guid": "DlN/o{M85J",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "The MED (Multi-Exit Discriminator) value is used by ASes connected by multiple links to prefer for ​what kind of traffic?",
                        "Inbound"
                    ],
                    "guid": "yQ:-3WCvDN",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "The <b>LocalPref</b> attribute is used to prefer routes learned through a specific AS over other ASes for ​traffic what kind of traffic.",
                        "Outbound"
                    ],
                    "guid": "y}uB0Rob]K",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "ASPATH",
                        "This attribute prevents loops and is used to choose between multiple routes to the same destination, the route with the shortest path."
                    ],
                    "guid": "d%K+F7[7;b",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "NEXT HOP",
                        "This attribute refers to the next-hop router's IP address (interface) along the path towards the destination."
                    ],
                    "guid": "L^BES/boP7",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "Assume that AS X prefers routes advertised to AS Y to go through R1 as opposed to R2. For AS Y to be influenced to choose R1 to forward traffic to AS X, R1 must have a ​ ________ MED value, assuming that all other attributes are equal.",
                        "Lower"
                    ],
                    "guid": "L_&#7_8S{E",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "Autonimous System (AS)",
                        "A group of routers that operate under ​the same administrative ​ domain."
                    ],
                    "guid": "fRJSWx=[:c",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "T/F<br><br>An ISP or CDN can operate on many autonimous systems.",
                        "True"
                    ],
                    "guid": "s4h6O-8-2(",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "Assume that AS X learns of a route to the same destination via AS Y and AS Z. If X prefers to route its traffic through Z due to peering or business, it can assign what kind of LocalPref value to routes it learns from Z, and thus using LocalPref, AS X can control where traffic exits the AS.",
                        "Higher"
                    ],
                    "guid": "vv}&7sSLK4",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "The internet topology has been evolving from a ​&nbsp; _ _ _ _ _ _ _ _ _ _ structure into a ​ _ _ _ _ _ _ _ _ _ _ structure.",
                        "Heirarchical<br>Flat"
                    ],
                    "guid": "?G:b6l%3a",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "What are the two kinds of BGP UPDATE messages?",
                        "<ul><li>announcement</li><li>withdrawl</li></ul>"
                    ],
                    "guid": "kcj`!,Odqp",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "Withdrawl messages",
                        "Type of BGP UPDATE message<br><br>inform that receive that a previously announced route is no longer available. The removal could be due to some failure or a change in the routing policy."
                    ],
                    "guid": "ywf#xy/Z%W",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "Announcement messages",
                        "Type of BGP UPDATE message<br><br>messages that advertise new routes and updates to existing routes. They include several standardized attributes."
                    ],
                    "guid": "kItnn=@<wT",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "Border Gateway Protocol (BGP)",
                        "Border routers of the ASes use this protocol to exchange routing information with one another."
                    ],
                    "guid": "QfT=W?.$0%",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "Interior Gateway Protocol (IGP)",
                        "Routers within the same AS use this protocol to \"optimize a path metric\" <b>within</b> that AS.<br><br>Internal Router -&gt; Internal Router<br><br>Ex. RIP, OSPF, EIGRP"
                    ],
                    "guid": "iSVjMYn5.;",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "A router within an AS decides which route to export by first applying what policies to exclude routes entirely from further consideration.",
                        "import policies"
                    ],
                    "guid": "HO-}(Hw+ZN",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "What is one technique that ASs can use to help limit routing table size.",
                        "filtering"
                    ],
                    "guid": "Ntn.FYI]N0",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "A pair of routers, known as ​ (a) _ _ _ _ _ _ _ _ _ _ , exchange routing information over a semi-permanent TCP port connection called a ​ (b) _ _ _ _ _ _ _ _ _ _ . A BGP session between a pair of routers in two different ASes is called an ​ (c) _ _ _ _ _ _ _ _ _ _ session, and a BGP session between routers that belong to the same AS is called an ​ (d) _ _ _ _ _ _ _ _ _ _ session.",
                        "<div>BGP peers</div><div>BGP session</div><div>external BGP (eBGP)</div><div>internal BGP (iBGP)</div>"
                    ],
                    "guid": "dE=uFMD<{E",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "Participant AS",
                        "&nbsp;The ASes that interconnect at an IXP."
                    ],
                    "guid": "Q.V|l%I>Eu",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "Internet Exchange Point (IXP)",
                        "Physical infrastructures that provide the means for ASes to interconnect and directly exchange traffic with one another."
                    ],
                    "guid": "x!ow{D)^lt",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "What is the order of precidence for an AS to <b>import</b> the component's routes.",
                        "<div><div>Customers</div></div><div><div>Peers</div></div><div><div>Providers</div></div>"
                    ],
                    "guid": "L!TQI;ueS@",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "T/F<br><br>iBGP is an IGP-like protocol (e.g., RIP or OSPF)",
                        "False"
                    ],
                    "guid": "PTP1iq+5[@",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "How does the LocalPref attribute affect routing priorities.",
                        "<b>Higher LocalPref values increase the </b>prioirity<b> which routes are imported.</b>"
                    ],
                    "guid": "F92d0NCE#",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "LocalPref attribute",
                        "<ul><li>Set by <b>Local AS<br></b></li><li><b>Higher</b> values <b>increase</b> the prioirity which routers are<b>&nbsp;</b>used as <b>Exit points</b> for outgoing traffic.</li></ul>"
                    ],
                    "guid": "j!Vl415%vh",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "Multi-Exit Discriminator (MED) value",
                        "<ul><li>Set by <b>Neighbor AS<br></b></li><li><b>Lower</b> values <b>increase</b> the prioirity which routers are&nbsp;used as <b>Entry points&nbsp;</b>for&nbsp;incoming traffic.</li></ul>"
                    ],
                    "guid": "qI8p:dggYO",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "Interior Border Gateway Protocol (iBGP)",
                        "Used to advertise routes coming&nbsp;<b>from</b> <b>External</b> routers&nbsp;<b>to</b>&nbsp;routers&nbsp;<b>Internal</b> to the AS."
                    ],
                    "guid": "kJxLGzZ{Sb",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "External Border Gateway Protocol (eBGP)",
                        "Used to advertise routes <b>to routers&nbsp;External </b>to the AS."
                    ],
                    "guid": "P_}ZXK}1:#",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                }
            ]
        },
        {
            "__type__": "Deck",
            "children": [],
            "crowdanki_uuid": "6b6c2f4a-b000-11ed-958b-77f34c5f6f8a",
            "deck_config_uuid": "11ae97d4-a760-11ed-8af1-a14d95925fac",
            "desc": "",
            "dyn": 0,
            "extendNew": 0,
            "extendRev": 0,
            "media_files": [
                "Screenshot 2023-02-18 at 2.24.32 PM.png",
                "Screenshot 2023-02-18 at 2.53.11 PM.png"
            ],
            "name": "Lesson 5: Router Design and Algorithms (Part 1)",
            "notes": [
                {
                    "__type__": "Note",
                    "fields": [
                        "What are some reasons to use Multibit Tries with Variable-Length Strides?",
                        "<ul><li>The <b>optimization</b> of stride length for each node <b>save trie memory</b> and have the <b>least memory accesses</b>.</li><li>Each node can have a different number of bits to be explored.</li><li>An <b>optimum variable</b> <b>stride</b> is selected by using <b>dynamic programming</b>.<br></li></ul>"
                    ],
                    "guid": "yl<-0{@CR8",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "Key points of using Multibit Tries Fixed-Length Stride.",
                        "<ul><li>Every element in a trie represents two pieces of information: a pointer and a prefix value.</li><li>The prefix search moves ahead with the preset length in n-bits<br></li><li>When the path is traced by a pointer, we remember the last matched prefix (if any).</li><li>Our search ends when an empty pointer is met. At that time, we return the last matched prefix as our final prefix match.<br></li></ul>"
                    ],
                    "guid": "GO=y`{,,HT",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "What types of switching can send multiple packets across the fabric in parallel? ",
                        "Interconnection Network / Crossbar"
                    ],
                    "guid": "d`hi?%W6_m",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "\\[\\displaylines{P1 =&gt; 101* \\\\\\\nP2 =&gt; 0*\\\\\\\nP3 =&gt; 1* \\\\\\\nP4 =&gt; 10101*}\\]<pre>Which one of the above does 100 align to?</pre>",
                        "P3"
                    ],
                    "guid": "NvO%yk(DP_",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "\\[\\displaylines{P1 =&gt; 101* \\\\\\\nP2 =&gt; 0*\\\\\\\nP3 =&gt; 1* \\\\\\\nP4 =&gt; 10101*}\\]<pre>Which one of the above does 110 align to?</pre>",
                        "P3"
                    ],
                    "guid": "c/<}yv|{&$",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "\\[\\displaylines{P1 =&gt; 101* \\\\\\\nP2 =&gt; 0*\\\\\\\nP3 =&gt; 1* \\\\\\\nP4 =&gt; 10101*}\\]<pre>Which one of the above does 111 align to?</pre>",
                        "P3"
                    ],
                    "guid": "FyPlkD_iO:",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "\\[\\displaylines{P1 =&gt; 101* \\\\\\\nP2 =&gt; 0*\\\\\\\nP3 =&gt; 1* \\\\\\\nP4 =&gt; 10101*}\\]<pre>Which one of the above does 1011 align to?</pre>",
                        "P1"
                    ],
                    "guid": "Ltf^yY9XdC",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "Dataplane Functions",
                        "<ul><li><b>Forwarding</b> packets at Layer 3</li><li><b>Switching</b> packets at Layer 2</li><li><b>Decrementing</b> Time To Live (TTL)</li><li><b>Computing</b> an IP header checksum<br></li></ul>"
                    ],
                    "guid": "wgguYmdM!1",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "Control plane functions",
                        "<div><ul><li>Computing paths based on a protocol</li><li>Running protocols to build a routing table</li><li>Running the Spanning Tree Protocol</li><li>Running a protocol or logic to configure a middle box device for load balancing</li></ul></div>"
                    ],
                    "guid": "iLmsDM-*<%",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "unibit trie address lookup worst case (Big O)",
                        "n"
                    ],
                    "guid": "Aa6DPOpfgt",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "imput port functionalities",
                        "<div><ul><li>The input ports perform the lookup function. At this point, the input ports consult the forwarding table to ensure that each packet is forwarded to the appropriate output port through the switch fabric.</li><li>It acts as the data link processing unit decapsulates the packet.</li><li>The input ports physically terminate the incoming links to the router.</li></ul></div>"
                    ],
                    "guid": "H_`{G*]QxJ",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "Four main components of a router?",
                        "<div><ul><li>Switch fabric</li><li>Output Port</li><li>Input port</li><li>Routing Processor</li></ul></div><div><div></div></div>"
                    ],
                    "guid": "yhd9G6&?)!",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "The advantage of a multibit trie vs a unibit trie is?",
                        "A <b>multibit trie is ​​shorter</b> than a unibit trie representing the same prefix database and <b>requires ​fewer</b> <b>memory accesses</b> to perform a lookup."
                    ],
                    "guid": "qlS*Iv}K7i",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "What is the mask for the address 192.168.0.1/24.",
                        "255.255.255.0"
                    ],
                    "guid": "I;zi,{QnQ*",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "What is the mask for the address 192.168.0.1/16.",
                        "255.255.0.0"
                    ],
                    "guid": "JB66l)=CaL",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "What is the mask for the address 192.168.0.1/8.",
                        "255.0.0.0"
                    ],
                    "guid": "w9i2Bm{mXe",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "In Switching via memory, Input/Output ports operate as I/O device in an operating system and controlled by what?",
                        "Routing Processor"
                    ],
                    "guid": "b9fWwh[WB*",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "In Switching via bus, the routing processor does what?",
                        "Intervenes in the operation just like switching via memory.<br><br>When packets arrive at the designated output port, all the packets can cross the bus at a given time."
                    ],
                    "guid": "3I&&!o<j:",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "multibit trie characteristics",
                        "<div><ul><li>Each node has 2<sup>k</sup>&nbsp;children</li><li>Implement lookups using a stride</li><li>Can perform multi-bit lookups per step</li></ul></div>"
                    ],
                    "guid": "b)av&EZIVg",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "3 types of Switch fabric",
                        "<div><ul><li>Memory</li><li>Crossbar (Interconnection Network)</li><li>Bus</li></ul></div>"
                    ],
                    "guid": "e5iZ;].4aU",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "What are the most time-sensitive tasks performed by the router?",
                        "<div><ul><li>Switching</li><li>Lookup</li><li>Scheduling/Queuing</li></ul></div>"
                    ],
                    "guid": "x2JzaNpp,I",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "T/F<br><br>The routing protocols such as RIP, OSPF, and BGP are implemented in the routing processors.",
                        "True"
                    ],
                    "guid": "d?O4sw_#q~",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "Forwarding Function",
                        "The router’s action to transfer a packet from an input link interface to the appropriate output link interface. Forwarding occurs at very short timescales (typically a few nanoseconds) and is typically implemented in software."
                    ],
                    "guid": "k%Lf})V)h2",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "What do routers use Simple Network Management Protocol (SNMP) for?",
                        "storing and modifying information (e.g. counters) about the router for remote inspection"
                    ],
                    "guid": "cl.gw|pH:H",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "What protocol do routers use for remote communication with the router?",
                        "TCP/UDP"
                    ],
                    "guid": "Da;8llIB!;",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "What protocol do routers use for storing and modifying information (e.g. counters) about the router for remote inspection?",
                        "Simple Network Management Protocol (SNMP)"
                    ],
                    "guid": "mn?ynL(J`E",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "What protocol do routers use for sending error messages, e.g. when TTL expires?<br>",
                        "Internet Control Message Protocol (ICMP)"
                    ],
                    "guid": "uPL=,.gqxV",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "<img src=\"Screenshot 2023-02-18 at 2.24.32 PM.png\"><br>Given the above variable-stride multibit trie.<div>Which node corresponds to 1111*?</div>",
                        "n15"
                    ],
                    "guid": "m;.L~]ZA|B",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "<img src=\"Screenshot 2023-02-18 at 2.24.32 PM.png\"><br>Given the above variable-stride multibit trie.<div>Which node corresponds to 0110*?</div>",
                        "n8"
                    ],
                    "guid": "kG`SDb4WTu",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "<img src=\"Screenshot 2023-02-18 at 2.24.32 PM.png\"><br>Given the above variable-stride multibit trie.<div>Which node corresponds to 011*?</div>",
                        "n8 and n9"
                    ],
                    "guid": "q+v)KY|oBj",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "<img src=\"Screenshot 2023-02-18 at 2.24.32 PM.png\"><br>Given the above variable-stride multibit trie.<div>Which node corresponds to 110*?</div>",
                        "n12 and n13"
                    ],
                    "guid": "D`E<iyq3W4",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "<div><div>T/F</div><div><br></div><div>For Switching via interconnection network or crossbar, crossbar network can carry multiple packets at the same time, as long as they are using different input and output ports. For example, packets can go from A-to-Y and B-to-X simultaneously.</div></div>",
                        "True"
                    ],
                    "guid": "k(4GMJYN|Y",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "<div>T/F</div><div><br></div><div><div><div>Fixed-length multibit tries can support an arbitrary number of prefix lengths.</div></div></div>",
                        "False"
                    ],
                    "guid": "o}5^;1dHK8",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "<div>T/F</div><div><br></div><div><div><div>In the Unitbit Tries algorithm, if a prefix is a substring of another prefix, we should select the path that matches with the smaller substring.</div></div></div>",
                        "False"
                    ],
                    "guid": "sr42FF#Eer",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "<div><img src=\"Screenshot 2023-02-18 at 2.53.11 PM.png\"><br></div><div>Consider the above unibit trie. What node matches with 00*?</div>",
                        "a"
                    ],
                    "guid": "g@2TfVGI-3",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "<div><img src=\"Screenshot 2023-02-18 at 2.53.11 PM.png\"><br></div><div>Consider the above unibit trie. What node matches with 1*?</div>",
                        "b"
                    ],
                    "guid": "F(2+808B.8",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "<div><img src=\"Screenshot 2023-02-18 at 2.53.11 PM.png\"><br></div><div>Consider the above unibit trie. What node matches with 01*?</div>",
                        "c"
                    ],
                    "guid": "yCcsI^KfAG",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "<div><img src=\"Screenshot 2023-02-18 at 2.53.11 PM.png\"><br></div><div>Consider the above unibit trie. What node matches with 0000*?</div>",
                        "e"
                    ],
                    "guid": "o$`9NS{hUC",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "<div><img src=\"Screenshot 2023-02-18 at 2.53.11 PM.png\"><br></div><div>Consider the above unibit trie. What node matches with 00011*?</div>",
                        "h"
                    ],
                    "guid": "EMp!&:RUqn",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "<div><div>Which plane operates on a shorter timescale?</div></div>",
                        "data"
                    ],
                    "guid": "kEJf!N9.kB",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "<div><div><br>In the UnitBit Tries, The nodes with only one pointer each are what kind of branches?<br></div></div>",
                        "one-way<br><br>&nbsp;For efficiency, we compress these branches to a single text string with 2 bits."
                    ],
                    "guid": "HR`L|usu#G",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "<div><div>Name one of the functions of the router that implement the routing protocols, maintain the routing tables and computing the forwarding table. All those functions are implemented in the software in the routing processor.</div></div><br>",
                        "<div>Router Forwarding plane function<br></div><br>"
                    ],
                    "guid": "OTpn9;sW^=",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "<div><div><div><div>What IP addressing model uses fixed-length prefixes.</div></div></div></div>",
                        "<div>Class addressing</div>"
                    ],
                    "guid": "wqg]0([}RQ",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "<div><div><div><div>What IP addressing model uses arbitrary-length prefixes.</div></div></div></div>",
                        "Classless Internet Domain Routing (CIDR)"
                    ],
                    "guid": "FFL*WMNpsP",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "What new problem has CIDR addressing introduced?",
                        "longest-matching prefix lookup"
                    ],
                    "guid": "m,/CCE$[Oy",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "How has CIDR addressing solved a problem with classful addressing?",
                        "decreased router table size"
                    ],
                    "guid": "nagLX(pRus",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "he data plane functions of a traditional router are implemented in ​what part of the router?",
                        "hardware"
                    ],
                    "guid": "Aa*fn<fulL",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "The control plane functions are implemented in what part of the router?",
                        "software"
                    ],
                    "guid": "OJoS6J!rx)",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "In a unibit trie If a prefix is a substring of another prefix how to we store it?",
                        "The smaller string is stored in the path to the longer (more specific prefix)"
                    ],
                    "guid": "J.rUP0%Dd`",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "Unibit trie - Prefix Match Steps",
                        "<ol><li>We begin the search for a longest prefix match by tracing the trie path.</li><li>We continue the search until we fail (no match or an empty pointer)</li><li>When our search fails, the last known successful prefix traced in the path is our match and our returned value.</li></ol>"
                    ],
                    "guid": "B>fDoBnq7e",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "types of prefix notation",
                        "<div><ol><li>Dot Decimal</li><li>Slash Notation</li><li>Masking</li></ol></div>"
                    ],
                    "guid": "vFqzR[p8$p",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "Slash Notation",
                        "<div>Standard notation: A/L (where A=Address, L=Length)</div><div>Example: 132.238.0.0/16</div><div>16 bits for prefixing</div>"
                    ],
                    "guid": "rOH@x?LNQ[",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "Masking",
                        "255.0.0.0 = 8 bit prefix<br>255.255.0.0 = 16 bit prefix<br>255.255.255.0 = 24 bit prefix"
                    ],
                    "guid": "Bum*CT;.d6",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "Dot Decimal",
                        "<div>The binary prefix of 132.234: 1000010011101010*</div><div>The * indicates wildcard character to say that the remaining bits do not matter.</div>"
                    ],
                    "guid": "w{-7}tdz0x",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "How do we handle a colision during prefix expansion?",
                        "<div>The expanded prefix gets dropped.<br><br>If P6=1000* collides with P7=100000* then P6 (shorter prefix) gets removed.<br><br>The * indicates wildcard character to say that the remaining bits do not matter.<br></div>"
                    ],
                    "guid": "HANUKkP=&e",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "\\[\\displaylines{P1 =&gt; 101* \\\\\\\nP2 =&gt; 0*\\\\\\\nP3 =&gt; 1* \\\\\\\nP4 =&gt; 10101*}\\]Expanding each prefix with a stride length of 3.<br><br>What prefixes would be associated with P3?",
                        "110*, 100*, and 111*"
                    ],
                    "guid": "e@Bh#jiN$",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "\\[\\displaylines{P1 =&gt; 101* \\\\\\\nP2 =&gt; 0*\\\\\\\nP3 =&gt; 1* \\\\\\\nP4 =&gt; 10101*}\\]Expanding each prefix with a stride length of 3.<br><br>What prefixes would be associated with P2?",
                        "000*, 010*, 001*, and 011*"
                    ],
                    "guid": "yn)Pd~Yq$(",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "\\[\\displaylines{P1 =&gt; 101* \\\\\\\nP2 =&gt; 0*\\\\\\\nP3 =&gt; 1* \\\\\\\nP4 =&gt; 10101*}\\]Expanding each prefix with a stride length of 3.<br><br>What prefixes would be associated with P1?<br>",
                        "101*"
                    ],
                    "guid": "MmS7xr,S,g",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "Rules for Multibit Tries - Fixed Stride",
                        "<ol><li>Every element in a trie represents two pieces of information: a pointer and a prefix value.</li><li>The prefix search moves ahead with the preset length in n-bits (3 in this case)&nbsp;</li><li>When the path is traced by a pointer, we remember the last matched prefix (if any).<br></li><li>Our search ends when an empty pointer is met. At that time, we return the last matched prefix as our final prefix match.</li></ol><br>"
                    ],
                    "guid": "sN`6Nf@9bx",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "Rules for Multibit Tries - Variable Stride",
                        "<div><ol><li>Every node can have a different number of bits to be explored.</li><li>The optimizations to the stride length for each node are all done to save trie memory and the least memory accesses.</li><li>An optimum variable stride is selected by using dynamic programming</li></ol></div>"
                    ],
                    "guid": "NM{[i]U/mo",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                },
                {
                    "__type__": "Note",
                    "fields": [
                        "prefix expansion",
                        "<ul><li>We expand all prefixes to the length of the stride length give all permutations of the missing bits to expand it up to the stride length.<br></li><li>We do this thereby removeing all lengths that are not multiples of the chosen stride length.</li><li>We end up with a new database of prefixes, which may be larger (in terms of the actual number of prefixes) but with fewer lengths.</li><li>The expansion gives us more speed with an increased cost of the database size.</li></ul>"
                    ],
                    "guid": "Q/ld~4|&9L",
                    "note_model_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
                    "tags": []
                }
            ]
        }
    ],
    "crowdanki_uuid": "11ad048c-a760-11ed-8af1-a14d95925fac",
    "deck_config_uuid": "11ae97d4-a760-11ed-8af1-a14d95925fac",
    "deck_configurations": [
        {
            "__type__": "DeckConfig",
            "autoplay": true,
            "buryInterdayLearning": false,
            "crowdanki_uuid": "11ae97d4-a760-11ed-8af1-a14d95925fac",
            "dyn": false,
            "interdayLearningMix": 0,
            "lapse": {
                "delays": [
                    10.0
                ],
                "leechAction": 0,
                "leechFails": 8,
                "minInt": 1,
                "mult": 0.0
            },
            "maxTaken": 60,
            "name": "Default",
            "new": {
                "bury": true,
                "delays": [
                    1.0,
                    10.0
                ],
                "initialFactor": 2500,
                "ints": [
                    1,
                    2,
                    0
                ],
                "order": 1,
                "perDay": 200,
                "separate": true
            },
            "newGatherPriority": 0,
            "newMix": 0,
            "newPerDayMinimum": 0,
            "newSortOrder": 0,
            "replayq": true,
            "rev": {
                "bury": true,
                "ease4": 1.3,
                "fuzz": 0.05,
                "hardFactor": 1.2,
                "ivlFct": 1.0,
                "maxIvl": 36500,
                "minSpace": 1,
                "perDay": 500
            },
            "reviewOrder": 0,
            "timer": 0
        }
    ],
    "desc": "",
    "dyn": 0,
    "extendNew": 0,
    "extendRev": 0,
    "media_files": [],
    "name": "GA Tech OMSCS::CS250 Computer Networks",
    "newLimit": null,
    "newLimitToday": null,
    "note_models": [
        {
            "__type__": "NoteModel",
            "crowdanki_uuid": "11adacca-a760-11ed-8af1-a14d95925fac",
            "css": ".card {\n font-family: arial;\n font-size: 20px;\n text-align: left;\n color: black;\n background-color: white;\n}\n",
            "flds": [
                {
                    "description": "",
                    "font": "Arial",
                    "media": [],
                    "name": "Front",
                    "ord": 0,
                    "rtl": false,
                    "size": 20,
                    "sticky": true
                },
                {
                    "description": "",
                    "font": "Arial",
                    "media": [],
                    "name": "Back",
                    "ord": 1,
                    "rtl": false,
                    "size": 20,
                    "sticky": false
                },
                {
                    "description": "",
                    "font": "Arial",
                    "media": [],
                    "name": "Add Reverse",
                    "ord": 2,
                    "rtl": false,
                    "size": 20,
                    "sticky": false
                }
            ],
            "latexPost": "\\end{document}",
            "latexPre": "\\documentclass[12pt]{article}\n\\special{papersize=3in,5in}\n\\usepackage[utf8]{inputenc}\n\\usepackage{amssymb,amsmath}\n\\pagestyle{empty}\n\\setlength{\\parindent}{0in}\n\\begin{document}\n",
            "latexsvg": false,
            "name": "Basic Quizlet",
            "req": [
                [
                    0,
                    "any",
                    [
                        0
                    ]
                ],
                [
                    1,
                    "all",
                    [
                        1,
                        2
                    ]
                ]
            ],
            "sortf": 0,
            "tags": [
                "devops",
                "aws"
            ],
            "tmpls": [
                {
                    "afmt": "{{FrontSide}}\n\n<hr id=answer>\n\n\n{{Back}}",
                    "bafmt": "",
                    "bfont": "",
                    "bqfmt": "",
                    "bsize": 0,
                    "did": null,
                    "name": "Normal",
                    "ord": 0,
                    "qfmt": "{{Front}}\n\n"
                },
                {
                    "afmt": "{{FrontSide}}\n\n<hr id=answer>\n\n{{Front}}",
                    "bafmt": "",
                    "bfont": "",
                    "bqfmt": "",
                    "bsize": 0,
                    "did": null,
                    "name": "Reverse",
                    "ord": 1,
                    "qfmt": "{{#Add Reverse}}{{Back}}{{/Add Reverse}}"
                }
            ],
            "type": 0,
            "vers": []
        },
        {
            "__type__": "NoteModel",
            "crowdanki_uuid": "11adbb66-a760-11ed-8af1-a14d95925fac",
            "css": ".card {\n font-family: arial;\n font-size: 20px;\n text-align: left;\n color: black;\n background-color: white;\n}\n\n.cloze {\n font-weight: bold;\n color: blue;\n}",
            "flds": [
                {
                    "description": "",
                    "font": "Arial",
                    "media": [],
                    "name": "Text",
                    "ord": 0,
                    "rtl": false,
                    "size": 20,
                    "sticky": true
                },
                {
                    "description": "",
                    "font": "Arial",
                    "media": [],
                    "name": "Extra",
                    "ord": 1,
                    "rtl": false,
                    "size": 20,
                    "sticky": false
                }
            ],
            "latexPost": "\\end{document}",
            "latexPre": "\\documentclass[12pt]{article}\n\\special{papersize=3in,5in}\n\\usepackage[utf8]{inputenc}\n\\usepackage{amssymb,amsmath}\n\\pagestyle{empty}\n\\setlength{\\parindent}{0in}\n\\begin{document}\n",
            "latexsvg": false,
            "name": "Cloze-352f5",
            "req": [
                [
                    0,
                    "any",
                    [
                        0
                    ]
                ]
            ],
            "sortf": 0,
            "tags": [
                "devops",
                "aws",
                "cloud"
            ],
            "tmpls": [
                {
                    "afmt": "{{cloze:Text}}<br>\n{{Extra}}",
                    "bafmt": "",
                    "bfont": "",
                    "bqfmt": "",
                    "bsize": 0,
                    "did": null,
                    "name": "Cloze",
                    "ord": 0,
                    "qfmt": "{{cloze:Text}}"
                }
            ],
            "type": 1,
            "vers": []
        },
        {
            "__type__": "NoteModel",
            "crowdanki_uuid": "94d029ea-7628-11eb-b3ff-e4a7a0580719",
            "css": ".card {\n  font-family: arial;\n  font-size: 20px;\n  text-align: center;\n  color: black;\n  background-color: white;\n}\n\n.cloze {\n  font-weight: bold;\n  color: blue;\n}\n\n.nightMode .cloze {\n  color: lightblue;\n}\n\nul,\nol {\n  display: inline-block;\n  text-align: left; \n}\n\ntable, th, td {\n  border: 1px solid black;\n  border-collapse: collapse;\n}\n\ntd[colspan]:not([colspan=\"1\"]) {\n    text-align: center;\n}\n\ncode {\n  display: inline-block;\n  white-space: pre;\n  text-align: left;\n  tab-size: 3;\n  background: rgba(7,7,7,0.2);\n}\n",
            "flds": [
                {
                    "description": "",
                    "font": "Arial",
                    "media": [],
                    "name": "Front",
                    "ord": 0,
                    "rtl": false,
                    "size": 20,
                    "sticky": true
                },
                {
                    "description": "",
                    "font": "Arial",
                    "media": [],
                    "name": "Back",
                    "ord": 1,
                    "rtl": false,
                    "size": 20,
                    "sticky": true
                }
            ],
            "latexPost": "\\end{document}",
            "latexPre": "\\documentclass[12pt]{article}\n\\special{papersize=3in,5in}\n\\usepackage[utf8]{inputenc}\n\\usepackage{amssymb,amsmath}\n\\pagestyle{empty}\n\\setlength{\\parindent}{0in}\n\\begin{document}\n",
            "latexsvg": false,
            "name": "OMSCS Basic",
            "req": [
                [
                    0,
                    "any",
                    [
                        0
                    ]
                ]
            ],
            "sortf": 0,
            "tags": [
                "practice_exam"
            ],
            "tmpls": [
                {
                    "afmt": "{{FrontSide}}\n\n<hr id=answer>\n\n{{Back}}",
                    "bafmt": "",
                    "bfont": "",
                    "bqfmt": "",
                    "bsize": 0,
                    "did": null,
                    "name": "Card 1",
                    "ord": 0,
                    "qfmt": "{{Deck}}<br>\n{{Front}}"
                }
            ],
            "type": 0,
            "vers": []
        }
    ],
    "notes": [],
    "reviewLimit": null,
    "reviewLimitToday": null
}